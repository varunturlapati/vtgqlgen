# Define what the schema is capable of:

type Query {
    Fruits(FruitFilter: FruitFilter, RackFilter: RackFilter): [Fruit!]!
    Fruit(Id: Int!): Fruit
    Racks(RackFilter: RackFilter): [Rack!]!
    Rack(Id: Int!): Rack
    Servers: [Server!]!
    Server(Name: String, Id: Int): Server
    ServerByAttrs(Attrs: ServerAttrs): Server
}

# Define what the queries are capable of:

type Mutation {
    CreateFruit(data: FruitInput!): Fruit!
    UpdateFruit(id: Int!, data: FruitInput!): Fruit!
    DeleteFruit(id: Int!): Fruit!
}

input FruitInput {
    Name: String!
    Quantity: Int!
}

input ServerAttrs {
    HostName: String
    Status: String
}